{"version":3,"sources":["components/main/Home/categorys.js","loadImg/index.js","../node_modules/_lazy-load-img@3.0.8@lazy-load-img/dist/lazy-load-img.js"],"names":["Categorys","inject","observer","this","props","home","getCatelog","categoryId","match","params","id","getNav","lazyLoad","refs","load","tab","navData","brotherCategory","index","_this","catalog","tabs","map","item","title","name","goodsList","initialPage","findIndex","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","ref","onClick","history","goBack","antd_mobile__WEBPACK_IMPORTED_MODULE_7__","renderTabBar","DefaultTabBar","Object","assign","page","onTabClick","change","currentCategory","front_desc","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","key","to","concat","src","data-src","list_pic_url","alt","retail_price","Component","lazy_load_img__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","lazy_load_img__WEBPACK_IMPORTED_MODULE_0___default","n","element","LazyLoadImg","el","mode","time","done","position","top","right","bottom","left","before","success","classList","add","error","module","exports","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","prototype","_extends","arguments","source","hasOwnProperty","call","GetTransparent","images","canvas","document","getContext","globalAlpha","value","w","h","width","height","data","toDataURL","options","undefined","querySelector","diy","backgroundSize","backgroundRepeat","backgroundPosition","start","_getTransparent","_timer","_start","clearTimeout","setTimeout","list","Array","slice","apply","querySelectorAll","forEach","dataset","LazyLoadImgState","bcr","getBoundingClientRect","mw","offsetWidth","mh","offsetHeight","window","innerWidth","innerHeight","boolX","boolY","testMeet","loadImg","_this2","img","Image","addEventListener","toBase64","backgroundImage","style","destroy","factory"],"mappings":"wMAUMA,EAHLC,YAAO,UACPC,0MAIOC,KAAKC,MAAMC,KAAKC,WAAW,CAAEC,WAAYJ,KAAKC,MAAMI,MAAMC,OAAOC,KACjEP,KAAKC,MAAMC,KAAKM,OAAO,CAAED,GAAIP,KAAKC,MAAMI,MAAMC,OAAOC,KACrDE,YAAST,KAAKU,KAAKC,qCAEhBC,GACH,IAAIL,EAAKP,KAAKC,MAAMC,KAAKW,QAAQC,gBAAgBF,EAAIG,OAAOR,GAC5DP,KAAKC,MAAMC,KAAKC,WAAW,CAAEC,WAAYG,IACzCP,KAAKC,MAAMC,KAAKM,OAAO,CAAED,GAAIA,qCAGxB,IAAAS,EAAAhB,KACL,IAAKA,KAAKC,MAAMC,KAAKe,QACjB,OAAO,KAEX,IAAKjB,KAAKC,MAAMC,KAAKW,QACjB,OAAO,KAEX,IAAMK,EAAOlB,KAAKC,MAAMC,KAAKW,QAAQC,gBAAgBK,IAAI,SAAAC,GACrD,MAAO,CAAEC,MAAOD,EAAKE,QAEnBC,EAAcvB,KAAKC,MAAMC,KAAKe,QAA9BM,UAEFC,EAAcxB,KAAKC,MAAMC,KAAKW,QAAQC,gBAAgBW,UAAU,SAAAL,GAChE,OAAOA,EAAKb,KAAkC,EAA3BS,EAAKf,MAAMI,MAAMC,OAAOC,KAE/C,OACImB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMC,IAAI,QACrBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOE,QAAS,WAAKf,EAAKf,MAAM+B,QAAQC,WAAWP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BAC/EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,4BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACM,EAAA,EAAD,MACAR,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMhB,KAAMA,EAAMiB,aAAc,SAAAlC,GAAK,OAAIyB,EAAAC,EAAAC,cAACM,EAAA,EAAKE,cAANC,OAAAC,OAAA,GAAwBrC,EAAxB,CAA+BsC,KAAM,MAAOf,YAAaA,EAAagB,WAAY,SAAC5B,EAAKG,GAAYC,EAAKyB,OAAO,CAAE7B,MAAKG,aAEhKW,EAAAC,EAAAC,cAACM,EAAA,EAAD,OAEJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,WAAM5B,KAAKC,MAAMC,KAAKW,QAAQ6B,gBAAgBpB,MAC9CI,EAAAC,EAAAC,cAAA,WAAM5B,KAAKC,MAAMC,KAAKW,QAAQ6B,gBAAgBC,aAElDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEPN,EAAUJ,IAAI,SAAAC,GACV,OAAQM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAASf,UAAU,YAAYgB,IAAKzB,EAAKb,GAAIuC,GAAE,UAAAC,OAAY3B,EAAKb,KACpEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKoB,IAAI,qGAAqGC,WAAU7B,EAAK8B,aAAcC,IAAI,MAGnJzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBT,EAAKE,MACrCI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,SAAkCT,EAAKgC,aAAvC,wBAvDhBC,qBAmETxD,6CC7Ef,IAAAyD,EAAAC,EAAA,IAAAC,EAAAD,EAAAE,EAAAH,GAwBe7C,IAvBE,SAAAiD,GACb,OAAO,IAAIC,IAAY,CACnBC,GAAIF,EACJG,KAAM,UACNC,KAAM,IACNC,MAAM,EACNC,SAAU,CACNC,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAEVC,OAAQ,aAGRC,QAAS,SAAUV,GACfA,EAAGW,UAAUC,IAAI,YAErBC,MAAO,SAAUb,GACbA,EAAGZ,IAAM,6CCnByC0B,EAAAC,QAC7D,WACD,aAEA,IAqBAC,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAC,EAAA,WACA,SAAAC,EAAAC,EAAAjF,GACA,QAAAkF,EAAA,EAAqBA,EAAAlF,EAAAmF,OAAkBD,IAAA,CACvC,IAAAE,EAAApF,EAAAkF,GACAE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAnD,OAAAoD,eAAAP,EAAAG,EAAAxC,IAAAwC,IAIA,gBAAAP,EAAAY,EAAAC,GAGA,OAFAD,GAAAT,EAAAH,EAAAc,UAAAF,GACAC,GAAAV,EAAAH,EAAAa,GACAb,GAdA,GAkBAe,EAAAxD,OAAAC,QAAA,SAAA4C,GACA,QAAAC,EAAA,EAAmBA,EAAAW,UAAAV,OAAsBD,IAAA,CACzC,IAAAY,EAAAD,UAAAX,GAEA,QAAAtC,KAAAkD,EACA1D,OAAAuD,UAAAI,eAAAC,KAAAF,EAAAlD,KACAqC,EAAArC,GAAAkD,EAAAlD,IAKA,OAAAqC,GAGAgB,EAAA,WACA,SAAAA,IACAtB,EAAA5E,KAAAkG,GACAlG,KAAAmG,OAAA,GACAnG,KAAAoG,OAAAC,SAAAzE,cAAA,UACA5B,KAAAoG,OAAAE,WAAA,MAAAC,YAAA,EAoBA,OAjBAvB,EAAAkB,EAAA,EACArD,IAAA,WACA2D,MAAA,SAAAxD,EAAAyD,EAAAC,GACA,GAAA1G,KAAAmG,OAAAnD,GAAA,OAAAhD,KAAAmG,OAAAnD,GACAhD,KAAAoG,OAAAO,MAAAF,EACAzG,KAAAoG,OAAAQ,OAAAF,EACA,IAAAG,EAAA7G,KAAAoG,OAAAU,UAAA,aAEA,OADA9G,KAAAmG,OAAAnD,GAAA6D,EACAA,IAEK,CACLhE,IAAA,UACA2D,MAAA,WACAxG,KAAAmG,OAAA,KACAnG,KAAAoG,OAAA,SAGAF,EAzBA,GA0JA,OA9HA,WAEA,SAAAvC,IACA,IAAAoD,EAAAjB,UAAAV,OAAA,QAAA4B,IAAAlB,UAAA,GAAAA,UAAA,MACAlB,EAAA5E,KAAA2D,GACA3D,KAAA+G,QAAA,CACAnD,GAAAyC,SAAAY,cAAA,QAEApD,KAAA,UAEAC,KAAA,IAEAC,MAAA,EAEAmD,IAAA,CAEAC,eAAA,QACAC,iBAAA,YACAC,mBAAA,iBAEArD,SAAA,CAEAC,IAAA,EAEAC,MAAA,EAEAC,OAAA,EAEAC,KAAA,GAGAC,OAAA,SAAAT,KAEAU,QAAA,SAAAV,KAEAa,MAAA,SAAAb,MAIAmD,EAAA/C,SAAA6B,EAAA,GAAoC7F,KAAA+G,QAAA/C,SAAA+C,EAAA/C,UACpC+C,EAAAG,IAAArB,EAAA,GAA+B7F,KAAA+G,QAAAG,IAAAH,EAAAG,KAE/BrB,EAAA7F,KAAA+G,WAEA/G,KAAAsH,QA+EA,OA5EAtC,EAAArB,EAAA,EACAd,IAAA,QACA2D,MAAA,WACAxG,KAAAuH,kBACAvH,KAAAuH,gBAAA,IAAArB,GAGAlG,KAAAwH,QAAA,EAEAxH,KAAAyH,WAEK,CACL5E,IAAA,SACA2D,MAAA,WACA,IAAAxF,EAAAhB,KAEA+G,EAAA/G,KAAA+G,QACAW,aAAA1H,KAAAwH,QAEAxH,KAAAwH,SACAxH,KAAAwH,OAAAG,WAAA,WACA,IAAAC,EAAAC,MAAAjC,UAAAkC,MAAAC,MAAAhB,EAAAnD,GAAAoE,iBAAA,eACA,IAAAJ,EAAAxC,QAAA2B,EAAAhD,KAAA,OAAA2D,aAAA1G,EAAAwG,QACAI,EAAAK,QAAA,SAAArE,IACAA,EAAAsE,QAAAC,kBA9JA,SAAAvE,GACA,IAAAmD,EAAAjB,UAAAV,OAAA,QAAA4B,IAAAlB,UAAA,GAAAA,UAAA,MAEAsC,EAAAxE,EAAAyE,wBAEAC,EAAA1E,EAAA2E,YAEAC,EAAA5E,EAAA6E,aAGAhC,EAAAiC,OAAAC,WAEAjC,EAAAgC,OAAAE,YAEAC,IAAAT,EAAAlE,MAAA6C,EAAA3C,MAAA,GAAAgE,EAAAhE,KAAAkE,EAAAvB,EAAA3C,MAAA,MAAAgE,EAAAhE,KAAA2C,EAAA7C,OAAAuC,GAAA2B,EAAAlE,MAAA6C,EAAA7C,OAAAoE,EAAA7B,GAEAqC,IAAAV,EAAAjE,OAAA4C,EAAA9C,KAAA,GAAAmE,EAAAnE,IAAAuE,EAAAzB,EAAA9C,KAAA,MAAAmE,EAAAnE,IAAA8C,EAAA5C,QAAAuC,GAAA0B,EAAAjE,OAAA4C,EAAA5C,QAAAqE,EAAA9B,GAEA,WAAA9C,EAAA+C,OAAA,IAAA/C,EAAAgD,QAAAiC,GAAAC,EA4IAC,CAAAnF,EAAAmD,EAAA/C,WACAhD,EAAAgI,QAAApF,KAIA5C,EAAAyG,UACSV,EAAAjD,SAEJ,CACLjB,IAAA,UACA2D,MAAA,SAAA5C,GACA,IAAAqF,EAAAjJ,KAGA+G,EAAA/G,KAAA+G,QACAnD,EAAAsE,QAAAC,iBAAA,QACApB,EAAA1C,OAAA4B,KAAAjG,KAAA4D,GACA,IAAAsF,EAAA,IAAAR,OAAAS,MACAD,EAAAlG,IAAAY,EAAAsE,QAAAlF,IAEAkG,EAAAE,iBAAA,kBAYA,MAXA,QAAArC,EAAAlD,MACAD,EAAAZ,IAAAiG,EAAA1B,gBAAA8B,SAAAzF,EAAAZ,IAAAY,EAAA+C,MAAA/C,EAAAgD,QACAG,EAAAG,IAAAoC,gBAAA,OAAAJ,EAAAlG,IAAA,IAEA6C,EAAAjC,EAAA2F,MAAAxC,EAAAG,MAEAtD,EAAAZ,IAAAkG,EAAAlG,WAGAY,EAAAsE,QAAAlF,WACAY,EAAAsE,QAAAC,iBACApB,EAAAzC,QAAA2B,KAAAgD,EAAArF,KACS,GAETsF,EAAAE,iBAAA,0BACAxF,EAAAsE,QAAAlF,WACAY,EAAAsE,QAAAC,iBACApB,EAAAtC,MAAAwB,KAAAgD,EAAArF,KACS,KAEJ,CACLf,IAAA,UACA2D,MAAA,kBAEAxG,KAAAwH,OAEAxH,KAAAuH,gBAAAiC,UAEAxJ,KAAAuH,gBAAA,SAGA5D,EA3HA,GA3F8D8F","file":"static/js/16.699968c5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { inject, observer } from 'mobx-react'\r\nimport { Tabs, WhiteSpace } from 'antd-mobile';\r\nimport './index.scss'\r\nimport { NavLink } from 'react-router-dom'\r\n//图片懒加载\r\nimport lazyLoad from '../../../loadImg'\r\n@inject('home')\r\n@observer\r\n\r\nclass Categorys extends Component {\r\n    componentDidMount() {\r\n        this.props.home.getCatelog({ categoryId: this.props.match.params.id })\r\n        this.props.home.getNav({ id: this.props.match.params.id })\r\n        lazyLoad(this.refs.load)\r\n    }\r\n    change(tab) {\r\n        let id = this.props.home.navData.brotherCategory[tab.index].id;\r\n        this.props.home.getCatelog({ categoryId: id })\r\n        this.props.home.getNav({ id: id })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.home.catalog) {\r\n            return null\r\n        }\r\n        if (!this.props.home.navData) {\r\n            return null\r\n        }\r\n        const tabs = this.props.home.navData.brotherCategory.map(item => {\r\n            return { title: item.name }\r\n        })\r\n        let { goodsList } = this.props.home.catalog;\r\n        //初始化nav\r\n        let initialPage = this.props.home.navData.brotherCategory.findIndex(item => {\r\n            return item.id === this.props.match.params.id*1;\r\n        })\r\n        return (\r\n            <div className='App' ref='load'>\r\n                <div className='noTabPageContent'>\r\n                    <div className='header'>\r\n                        <div className='left' onClick={()=>{this.props.history.goBack()}}><i className='iconfont icon-angle-left'></i></div>\r\n                        <div className='title'>奇趣分类</div>\r\n                        <div className='right'></div>\r\n                    </div>\r\n                    <div className='tabWrap'>\r\n                        <WhiteSpace />\r\n                        <Tabs tabs={tabs} renderTabBar={props => <Tabs.DefaultTabBar {...props} page={5} />} initialPage={initialPage} onTabClick={(tab, index) => { this.change({ tab, index }) }}>\r\n                        </Tabs>\r\n                        <WhiteSpace />\r\n                    </div>\r\n                    <div className='categoryDetail'>\r\n                        <div>{this.props.home.navData.currentCategory.name}</div>\r\n                        <div>{this.props.home.navData.currentCategory.front_desc}</div>\r\n                    </div>\r\n                    <div className='goodsList'>\r\n                        <div className='goodsList'>\r\n                            {\r\n                                goodsList.map(item => {\r\n                                    return (<NavLink className='goodsItem' key={item.id} to={`/goods/${item.id}`}>\r\n                                        <div className='goodsItemImg'>\r\n                                            <img src='https://ss0.bdstatic.com/-0U0bnSm1A5BphGlnYG/tam-ogel/8bc5c8ca3da4043fc6c9dbfb32d5dc89_121_121.jpg' data-src={item.list_pic_url} alt='' />\r\n                                            {/* <img src={item.list_pic_url} alt='' /> */}\r\n                                        </div>\r\n                                        <div className='goodsItemName'>{item.name}</div>\r\n                                        <div className='goodsItemPrice'>￥{item.retail_price}元</div>\r\n                                    </NavLink>)\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categorys\r\n","import LazyLoadImg from 'lazy-load-img'\r\nconst lazyLoad = element => {\r\n    return new LazyLoadImg({\r\n        el: element,\r\n        mode: 'default', //默认模式，将显示原图，diy模式，将自定义剪切，默认剪切居中部分\r\n        time: 300, // 设置一个检测时间间隔\r\n        done: true, //页面内所有数据图片加载完成后，是否自己销毁程序，true默认销毁，false不销毁\r\n        position: { // 只要其中一个位置符合条件，都会触发加载机制\r\n            top: 0, // 元素距离顶部\r\n            right: 0, // 元素距离右边\r\n            bottom: 0, // 元素距离下面\r\n            left: 0 // 元素距离左边\r\n        },\r\n        before: function () {\r\n    \r\n        },\r\n        success: function (el) {\r\n            el.classList.add('success')\r\n        },\r\n        error: function (el) {\r\n            el.src = './images/error.png'\r\n        }\r\n    })\r\n}\r\nexport default lazyLoad","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.LazyLoadImg = factory();\n})(this, function () {\n  'use strict';\n\n  var testMeet = function testMeet(el) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // 取得元素在可视区的位置（相对浏览器视窗）左右上下\n\n    var bcr = el.getBoundingClientRect(); // padding+border+width\n\n    var mw = el.offsetWidth; // 元素自身宽度\n\n    var mh = el.offsetHeight; // 元素自身的高度\n    // 包含了导航栏\n\n    var w = window.innerWidth; // 视窗的宽度\n\n    var h = window.innerHeight; // 视窗的高度\n\n    var boolX = !(bcr.right - options.left <= 0 && bcr.left + mw - options.left <= 0) && !(bcr.left + options.right >= w && bcr.right + options.right >= mw + w); // 左右符合条件\n\n    var boolY = !(bcr.bottom - options.top <= 0 && bcr.top + mh - options.top <= 0) && !(bcr.top + options.bottom >= h && bcr.bottom + options.bottom >= mh + h); // 上下符合条件\n\n    return el.width !== 0 && el.height !== 0 && boolX && boolY;\n  };\n\n  var classCallCheck = function classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var GetTransparent = function () {\n    function GetTransparent() {\n      classCallCheck(this, GetTransparent);\n      this.images = {};\n      this.canvas = document.createElement('canvas');\n      this.canvas.getContext('2d').globalAlpha = 0.0;\n    }\n\n    createClass(GetTransparent, [{\n      key: 'toBase64',\n      value: function toBase64(src, w, h) {\n        if (this.images[src]) return this.images[src];\n        this.canvas.width = w;\n        this.canvas.height = h;\n        var data = this.canvas.toDataURL('image/png');\n        this.images[src] = data;\n        return data;\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.images = null;\n        this.canvas = null;\n      }\n    }]);\n    return GetTransparent;\n  }();\n\n  var LazyLoadImg = function () {\n    // 构造函数 初始化参数\n    function LazyLoadImg() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      classCallCheck(this, LazyLoadImg);\n      this.options = {\n        el: document.querySelector('body'),\n        // 选择的元素\n        mode: 'default',\n        // 默认模式，将显示原图，diy模式，将自定义剪切，默认剪切居中部分\n        time: 300,\n        // 设置一个检测时间间隔\n        done: true,\n        // 页面内所有数据图片加载完成后，是否自己销毁程序，true默认销毁，false不销毁：FALSE应用场景：页面异步不断获取数据的情况下 需要实时监听则不销毁\n        diy: {\n          // 此属性，只有在设置diy 模式时才生效\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center center'\n        },\n        position: {\n          // 只要其中一个位置符合条件，都会触发加载机制\n          top: 0,\n          // 元素距离顶部\n          right: 0,\n          // 元素距离右边\n          bottom: 0,\n          // 元素距离下面\n          left: 0 // 元素距离左边\n\n        },\n        before: function before(el) {// 图片加载之前，执行钩子函数\n        },\n        success: function success(el) {// 图片加载成功，执行钩子函数\n        },\n        error: function error(el) {// 图片加载失败，执行的钩子函数\n        }\n      }; // 深拷贝 如果都有 则右面的值 option.position会覆盖this.options.position\n\n      options.position = _extends({}, this.options.position, options.position);\n      options.diy = _extends({}, this.options.diy, options.diy);\n\n      _extends(this.options, options);\n\n      this.start();\n    }\n\n    createClass(LazyLoadImg, [{\n      key: 'start',\n      value: function start() {\n        if (!this._getTransparent) {\n          this._getTransparent = new GetTransparent();\n        }\n\n        this._timer = true;\n\n        this._start();\n      }\n    }, {\n      key: '_start',\n      value: function _start() {\n        var _this = this;\n\n        var options = this.options;\n        clearTimeout(this._timer); // 清除定时器\n\n        if (!this._timer) return;\n        this._timer = setTimeout(function () {\n          var list = Array.prototype.slice.apply(options.el.querySelectorAll('[data-src]'));\n          if (!list.length && options.done) return clearTimeout(_this._timer);\n          list.forEach(function (el) {\n            if (!el.dataset.LazyLoadImgState && testMeet(el, options.position)) {\n              _this.loadImg(el);\n            }\n          });\n\n          _this._start();\n        }, options.time);\n      }\n    }, {\n      key: 'loadImg',\n      value: function loadImg(el) {\n        var _this2 = this; // 加载图片\n\n\n        var options = this.options;\n        el.dataset.LazyLoadImgState = 'start';\n        options.before.call(this, el);\n        var img = new window.Image();\n        img.src = el.dataset.src; // 图片加载成功\n\n        img.addEventListener('load', function () {\n          if (options.mode === 'diy') {\n            el.src = _this2._getTransparent.toBase64(el.src, el.width, el.height);\n            options.diy.backgroundImage = 'url(' + img.src + ')';\n\n            _extends(el.style, options.diy);\n          } else {\n            el.src = img.src;\n          }\n\n          delete el.dataset.src;\n          delete el.dataset.LazyLoadImgState;\n          return options.success.call(_this2, el);\n        }, false); // 图片加载失败\n\n        img.addEventListener('error', function () {\n          delete el.dataset.src;\n          delete el.dataset.LazyLoadImgState;\n          options.error.call(_this2, el);\n        }, false);\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        // 解除事件绑定\n        delete this._timer;\n\n        this._getTransparent.destroy();\n\n        this._getTransparent = null;\n      }\n    }]);\n    return LazyLoadImg;\n  }();\n\n  return LazyLoadImg;\n});"],"sourceRoot":""}